{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/WEHI-SODA-Hub/spatialmibi/master/assets/schema_input.json",
    "title": "WEHI-SODA-Hub/spatialmibi pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Sample name must be provided and cannot contain spaces",
                "meta": ["id"]
            },
            "function": {
                "type": "string",
                "pattern": "^(segment|analyse)$",
                "errorMessage": "Function must be either 'segment' or 'analyse'"
            },
            "an_expression_file": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.csv(\\.gz)?$",
                "errorMessage": "Expression file must exist and contain spaces and must have extension '.csv' or '.csv.gz'"
            },
            "an_hierarchy_file": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.y(a)?ml$",
                "errorMessage": "Hierarchy file must exist and must contain spaces and must have extension '.yml' or '.yaml'"
            },
            "an_sample_id": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Sample ID cannot contain spaces"
            },
            "an_marker_column": {
                "type": "string",
                "pattern": "^[\\w-]+$",
                "errorMessage": "Marker column must be provided as a single word without spaces"
            },
            "an_markers": {
                "type": "string",
                "pattern": "^[\\w-\\+_]+(:[\\w-\\+_]+)*$",
                "errorMessage": "Markers must be provided as a semicolon-separated list without spaces"
            },
            "an_are_markers_split": {
                "type": "boolean",
                "errorMessage": "Are markers split must be a boolean"
            },
            "an_cell_types": {
                "type": "string",
                "pattern": "^[\\w-\\+_]+(:[\\w-\\+_]+)*$",
                "errorMessage": "Cell types must be provided as a semicolon-separated list without spaces"
            },
            "an_parent_types": {
                "type": "string",
                "pattern": "^[\\w-\\+_]+(:[\\w-\\+_]+)*$",
                "errorMessage": "Parent types must be provided as a semicolon-separated list without spaces"
            },
            "an_metadata_cols": {
                "type": "string",
                "pattern": "^[\\w-\\+_]+(:[\\w-\\+_]+)*$",
                "errorMessage": "Metadata columns must be provided as a semicolon-separated list without spaces"
            },
            "an_plot_metas": {
                "type": "string",
                "pattern": "^[\\w-\\+_]+(:[\\w-\\+_]+)*$",
                "errorMessage": "Metadata columns to plot must be provided as a semicolon-separated list without spaces"
            },
            "an_plot_heatmaps": {
                "type": "boolean",
                "errorMessage": "Plot heatmaps must be a boolean"
            },
            "an_plot_props": {
                "type": "boolean",
                "errorMessage": "Plot properties must be a boolean"
            },
            "an_plot_umap": {
                "type": "boolean",
                "errorMessage": "Plot UMAP must be a boolean"
            },
            "an_plot_clusters": {
                "type": "boolean",
                "errorMessage": "Plot clusters must be a boolean"
            },
            "an_plot_spatial": {
                "type": "boolean",
                "errorMessage": "Plot spatial must be a boolean"
            },
            "an_save_rdata": {
                "type": "boolean",
                "errorMessage": "Save RData must be a boolean"
            },
            "seg_mibi_tiff": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.tiff$",
                "errorMessage": "MIBI TIFF file must exist, cannot contain spaces and must have extension '.tiff'"
            },
            "seg_nuclear_channel": {
                "type": "string",
                "pattern": "^[\\w-]+$",
                "errorMessage": "Nuclear channel must be provided as a single word without spaces"
            },
            "seg_membrane_channels": {
                "type": "string",
                "pattern": "^[\\w-]+(:[\\w-]+)*$",
                "errorMessage": "Membrane channels must be provided as a semicolon-separated list without spaces"
            },
            "seg_combine_method": {
                "type": "string",
                "pattern": "^(prod|max)$",
                "errorMessage": "Combine method must be either 'prod' or 'max'"
            },
            "seg_level": {
                "type": "integer",
                "minimum": 0,
                "maximum": 10,
                "errorMessage": "Segmentation level must be an integer between 0 and 10"
            },
            "seg_interior_threshold": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "errorMessage": "Interior threshold must be a number between 0 and 1"
            },
            "seg_maxima_smooth": {
                "type": "number",
                "minimum": 0,
                "errorMessage": "Maxima smoothing must be a number greater than or equal to 0"
            },
            "seg_min_nuclei_area": {
                "type": "number",
                "minimum": 0,
                "errorMessage": "Minimum nuclei area must be a number greater than or equal to 0"
            },
            "seg_remove_border_cells": {
                "type": "boolean",
                "errorMessage": "Remove border cells must be a boolean"
            },
            "seg_include_measurements": {
                "type": "boolean",
                "errorMessage": "Include measurements must be a boolean"
            },
            "seg_pixel_expansion": {
                "type": "integer",
                "minimum": 0,
                "errorMessage": "Pixel expansion must be an integer greater than or equal to 0"
            },
            "seg_padding": {
                "type": "integer",
                "minimum": 0,
                "errorMessage": "Padding must be an integer greater than or equal to 0"
            }
        },
        "required": ["sample", "function"]
    }
}
